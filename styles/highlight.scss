@use "sass:color";
@use "./variables"as v;

@mixin cm($names...) {
    @for $i from 0 to length($names) {

        $name: nth($names, $i + 1);

        .cm-#{$name} {
            @content;
        }
    }
}


@include cm("markplace-command") {
    font-size: 0.85em;
    font-family: var(--font-monospace);
    line-height: 1.3;
}

@mixin line-bg {
    background-color: v.$lineBgColor;
    left: 0px;
    right: 0px;
}

@include cm("markplace-inline-bg") {
    background-color: v.$lineBgColor;
}

// intentional
.markplace-line-bg {
    @include line-bg;
}


@include cm("markplace-obsidian-comment") {
    color: var(--code-comment, #696d70);
}

@include cm("markplace-tag") {
    color: color.change(#008bff, $alpha: v.$tagAlpha);
}

@include cm("markplace-modifier-tag") {
    color: color.change(#c0d700, $alpha: v.$tagAlpha);
}

@include cm("markplace-tag-content") {
    color: var(--code-normal, #f39b35);
}


@include cm("markplace-tag-end-content") {
    color: color.change(#fc4384, $alpha: v.$tagAlpha);
}


@include cm("markplace-sep-tag", "markplace-tag-sep-content") {
    color: v.$separatorTagColor;
}


@include cm("markplace-block-pre-content") {}

@include cm("markplace-block-post-content") {
    color: color.change(#696d70, $alpha: v.$tagAlpha);
}